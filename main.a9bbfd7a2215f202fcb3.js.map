{"version":3,"sources":["webpack:///./index.js","webpack:///../js/task-three.js"],"names":["makeTransaction","transaction","delay","min","max","Math","floor","random","Promise","resolve","reject","setTimeout","logSuccess","id","amount","console","log","logError","warn","then","catch"],"mappings":"2FACA,kB,mBCCA,MAIQA,EAAmBC,IACvB,MAAMC,GALyBC,EAKS,IALJC,EAKS,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADtB,IAACA,EAAKC,EAgBpC,OAVkB,IAAII,QAAS,CAACC,EAASC,KACvCC,WAAW,KACUN,KAAKE,SAAW,IAGpCE,EAASR,GAETS,EAAQT,MAERC,IAKCU,EAAa,EAAGC,KAAIC,aACxBC,QAAQC,IAAI,eAAeH,kBAAmBC,QAG1CG,EAAW,EAAGJ,SAClBE,QAAQG,KAAK,gCAAgCL,+BAa/Cb,EAAgB,CAAEa,GAAI,GAAIC,OAAQ,MAC/BK,KAAKP,GACLQ,MAAMH,GAETjB,EAAgB,CAAEa,GAAI,GAAIC,OAAQ,MAC/BK,KAAKP,GACLQ,MAAMH,GAETjB,EAAgB,CAAEa,GAAI,GAAIC,OAAQ,KAC/BK,KAAKP,GACLQ,MAAMH,GAETjB,EAAgB,CAAEa,GAAI,GAAIC,OAAQ,MAC/BK,KAAKP,GACLQ,MAAMH,K","file":"main.a9bbfd7a2215f202fcb3.js","sourcesContent":["\n// import * as one from '../js/task-one'\n// import * as two from '../js/task-two'\nimport * as three from '../js/task-three'","\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  \r\n  const makeTransaction = (transaction) => {  \r\n    const delay = randomIntegerFromInterval(200, 500);  \r\n     const promise =  new Promise ((resolve, reject) =>{\r\n      setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n        \r\n       if(canProcess){\r\n       resolve (transaction)\r\n       }\r\n       reject (transaction)\r\n      })\r\n    }, delay);\r\n    return promise\r\n  };\r\n  \r\n\r\n  const logSuccess = ({ id, amount }) => {\r\n    console.log(`Transaction ${id} processed in ${amount}ms`);\r\n  };\r\n  \r\n  const logError = ({ id }) => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n  \r\n  /*\r\n   * Работает так\r\n  //  */\r\n  // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n  // makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n  // makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n  // makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n  /*\r\n   * Должно работать так\r\n   */\r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n"],"sourceRoot":""}